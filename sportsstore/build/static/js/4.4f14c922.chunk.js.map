{"version":3,"sources":["admin/clientQueries.js","admin/OrdersRow.js","admin/OrdersTable.js","admin/clientMutations.js","admin/OrdersConnector.js","admin/ProductsRow.js","admin/ProductsTable.js","admin/ProductsConnector.js","admin/ProductCreator.js","admin/ProductEditor.js","auth/AuthWrapper.js","auth/AuthPrompt.js","admin/Admin.js"],"names":["ordersSummaryQuery","gql","_templateObject","productsList","_templateObject2","product","_templateObject3","OrdersRow","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","calcTotal","products","reduce","total","p","quantity","price","toFixed","getShipping","order","shipped","react_default","a","createElement","className","render","props","id","name","email","onClick","toggleShipped","inherits","Component","OrdersTable","totalSize","PaginationControls","assign","keys","orders","map","OrdersRow_OrdersRow","key","shipOrder","clientMutations_templateObject","storeProduct","clientMutations_templateObject2","updateProduct","clientMutations_templateObject3","deleteProduct","_templateObject4","vars","onlyShipped","page","pageSize","sort","OrdersConnector","compose","graphql","options","variables","_ref","_ref$data","data","loading","refetch","currentPage","pageCount","Math","ceil","navigateToPage","Number","setPageSize","size","sortKey","setSortProperty","_ref2","mutate","ProductsRow","category","Link","to","ProductsTable","prod","ProductsRow_ProductsRow","ConnectedProducts","update","cache","queryDetails","query","readQuery","filter","writeQuery","objectSpread","_ref3","ProductCreator","navigate","history","push","react_apollo_browser_umd","mutation","saveMutation","client","ValidatedForm","formModel","defaultAttrs","submitCallback","mode","resetStore","cancelCallback","submitText","cancelText","type","required","label","attrs","disabled","toConsumableArray","item","defaultValue","toLowerCase","ProductEditor","match","params","ProductCreator_ProductCreator","authWrapper","WrappedComponent","_temp","AuthContext","Consumer","context","AuthPrompt","withRouter","authenticate","credentials","catch","err","setState","errorMessage","message","then","state","_class","ApolloClient","uri","GraphQlUrl","request","gqloperation","setContext","headers","Authorization","webToken","createClass","value","ToggleLink","isAuthenticated","signout","Switch","Route","component","path","Redirect"],"mappings":"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","file":"static/js/4.4f14c922.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\nexport const ordersSummaryQuery = gql`\r\n  query($onlyShipped: Boolean, $page:Int, $pageSize:Int, $sort:String) {\r\n    orders(onlyUnshipped: $onlyShipped) {\r\n      totalSize,\r\n      orders(page: $page, pageSize: $pageSize, sort: $sort) {\r\n        id, name, email, shipped\r\n        products {\r\n          quantity, product { price }\r\n        }\r\n      }\r\n    }\r\n  }`\r\n\r\nexport const productsList = gql`\r\n  query($page: Int, $pageSize: Int, $sort: String) {\r\n    products {\r\n      totalSize,\r\n      products(page: $page, pageSize: $pageSize, sort: $sort) {\r\n        id, name, category, price\r\n      }\r\n    }\r\n  }`\r\n\r\nexport const product = gql`\r\n  query($id: ID!) {\r\n    product(id: $id) {\r\n      id, name, description, category, price\r\n    }\r\n  }`\r\n","import React, { Component } from \"react\";\r\n\r\nexport class OrdersRow extends Component {\r\n\r\n  calcTotal = (products) => products.reduce((total, p) =>\r\n    total += p.quantity * p.product.price, 0).toFixed(2)\r\n\r\n  getShipping = (order) => order.shipped\r\n    ? <i className=\"fa fa-shipping-fast text-success\" />\r\n    : <i className=\"fa fa-exclamation-circle text-danger\" />\r\n\r\n  render = () =>\r\n    <tr>\r\n      <td>{ this.props.order.id }</td>\r\n      <td>{ this.props.order.name }</td>\r\n      <td>{ this.props.order.email }</td>\r\n      <td className=\"text-right\">\r\n        ${ this.calcTotal(this.props.order.products) }\r\n      </td>\r\n      <td className=\"text-center\">\r\n        <button className=\"btn btn-sm btn-block bg-muted\"\r\n          onClick={ this.props.toggleShipped }>\r\n          { this.getShipping(this.props.order )}\r\n          <span>\r\n            { this.props.order.shipped\r\n              ? \" Shipped\" : \" Pending\"}\r\n          </span>\r\n        </button>\r\n      </td>\r\n    </tr>\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { OrdersRow } from \"./OrdersRow\";\r\nimport { PaginationControls } from \"../PaginationControls\";\r\n\r\nexport class OrdersTable extends Component {\r\n\r\n  render = () =>\r\n    <div>\r\n      <h4 className=\"bg-info text-white text-center p-2\">\r\n        { this.props.totalSize } Orders\r\n      </h4>\r\n\r\n      <PaginationControls keys={[\"ID\", \"Name\"]}\r\n        { ...this.props } />\r\n\r\n      <table className=\"table table-sm table-striped\">\r\n        <thead>\r\n          <tr><th>ID</th>\r\n            <th>Name</th><th>Email</th>\r\n          <th className=\"text-right\">Total</th>\r\n          <th className=\"text-center\">Shipped</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        { this.props.orders.map(order =>\r\n          <OrdersRow key={ order.id }\r\n            order={ order} toggleShipped={ () =>\r\n              this.props.toggleShipped(order.id, !order.shipped) }\r\n          />\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n}\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const shipOrder = gql`\r\n  mutation($id: ID!, $shipped: Boolean!) {\r\n    shipOrder(id: $id, shipped: $shipped) {\r\n      id, shipped\r\n    }\r\n  }`\r\n\r\nexport const storeProduct = gql`\r\n  mutation($product: productStore) {\r\n    storeProduct(product: $product) {\r\n      id, name, category, description, price\r\n    }\r\n  }`\r\n\r\nexport const updateProduct = gql`\r\n  mutation($product: productUpdate) {\r\n    updateProduct(product: $product) {\r\n      id, name, category, description, price\r\n    }\r\n  }`\r\n\r\nexport const deleteProduct = gql`\r\n  mutation($id: ID!) {\r\n    deleteProduct(id: $id) {\r\n      id\r\n    }\r\n  }`\r\n","import { graphql, compose } from \"react-apollo\";\r\nimport { ordersSummaryQuery } from \"./clientQueries\";\r\nimport { OrdersTable } from \"./OrdersTable\";\r\nimport { shipOrder } from \"./clientMutations\";\r\n\r\nconst vars = {\r\n  onlyShipped: false, page: 1, pageSize: 10, sort: \"id\"\r\n}\r\n\r\nexport const OrdersConnector = compose(\r\n  graphql(ordersSummaryQuery,\r\n    {\r\n      options: (props) => ({ variables: vars }),\r\n      props: ({data: { loading, orders, refetch }}) => ({\r\n        totalSize: loading ? 0 : orders.totalSize,\r\n        orders: loading ? []: orders.orders,\r\n        currentPage: vars.page,\r\n        pageCount: loading ? 0 : Math.ceil(orders.totalSize / vars.pageSize),\r\n        navigateToPage: (page) => { vars.page = Number(page); refetch(vars)},\r\n        pageSize: vars.pageSize,\r\n        setPageSize: (size) =>\r\n          { vars.pageSize = Number(size); refetch(vars)},\r\n        sortKey: vars.sort,\r\n        setSortProperty: (key) => { vars.sort = key; refetch(vars)},\r\n      })\r\n    }\r\n  ),\r\n  graphql(shipOrder, {\r\n    props: ({ mutate }) => ({\r\n      toggleShipped: (id, shipped) => mutate({ variables: { id, shipped }})\r\n    })\r\n  })\r\n)(OrdersTable);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class ProductsRow extends Component {\r\n\r\n  render = () =>\r\n    <tr>\r\n      <td>{ this.props.product.id }</td>\r\n      <td>{ this.props.product.name }</td>\r\n      <td>{ this.props.product.category }</td>\r\n      <td className=\"text-right\">\r\n        ${ this.props.product.price.toFixed(2) }\r\n      </td>\r\n      <td className=\"text-center\">\r\n        <button className=\"btn btn-sm btn-danger mx-1\"\r\n          onClick={ () =>\r\n            this.props.deleteProduct(this.props.product.id) }>\r\n          Delete\r\n        </button>\r\n        <Link to={`/admin/products/${this.props.product.id}`}\r\n          className=\"btn btn-sm btn-warning\">\r\n          Edit\r\n        </Link>\r\n      </td>\r\n    </tr>\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PaginationControls } from \"../PaginationControls\";\r\nimport { ProductsRow } from \"./ProductsRow\";\r\n\r\nexport class ProductsTable extends Component {\r\n\r\n  render = () =>\r\n    <div>\r\n      <h4 className=\"bg-info text-white text-center p-2\">\r\n        { this.props.totalSize } Products\r\n      </h4>\r\n\r\n      <PaginationControls keys={[\"ID\", \"Name\", \"Category\"]}\r\n        { ...this.props } />\r\n\r\n      <table className=\"table table-sm table-striped\">\r\n        <thead>\r\n          <tr><th>ID</th>\r\n              <th>Name</th><th>Category</th>\r\n              <th className=\"text-right\">Price</th>\r\n              <th className=\"text-center\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          { this.props.products.map(prod =>\r\n            <ProductsRow key={ prod.id} product={ prod }\r\n              deleteProduct={ this.props.deleteProduct } />\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-center\">\r\n        <Link to=\"/admin/products/create\" className=\"btn btn-primary\">\r\n          Create Product\r\n        </Link>\r\n      </div>\r\n    </div>\r\n}\r\n","import { graphql, compose } from \"react-apollo\";\r\nimport { ProductsTable } from \"./ProductsTable\";\r\nimport { productsList } from \"./clientQueries\";\r\nimport { deleteProduct } from \"./clientMutations\";\r\n\r\nconst vars = {\r\n  page: 1, pageSize: 10, sort: \"id\"\r\n}\r\n\r\nexport const ConnectedProducts = compose(\r\n  graphql(productsList,\r\n    {\r\n      options: (props) => ({ variables: vars }),\r\n      props: ({data: { loading, products, refetch }}) => ({\r\n        totalSize: loading ? 0 : products.totalSize,\r\n        products: loading ? []: products.products,\r\n        currentPage: vars.page,\r\n        pageCount: loading ? 0\r\n          : Math.ceil(products.totalSize / vars.pageSize),\r\n        navigateToPage: (page) => { vars.page = Number(page); refetch(vars)},\r\n        pageSize: vars.pageSize,\r\n        setPageSize: (size) =>\r\n          { vars.pageSize = Number(size); refetch(vars)},\r\n        sortKey: vars.sort,\r\n        setSortProperty: (key) => { vars.sort = key; refetch(vars)},\r\n      })\r\n    }\r\n  ),\r\n  graphql(deleteProduct,\r\n    {\r\n      options: {\r\n        update: (cache, { data: { deleteProduct: { id }}}) => {\r\n          const queryDetails = { query: productsList, variables: vars };\r\n          const data = cache.readQuery(queryDetails);\r\n          data.products.products =\r\n            data.products.products.filter(p => p.id !== id);\r\n          data.products.totalSize = data.products.totalSize - 1;\r\n          cache.writeQuery({...queryDetails, data });\r\n        }\r\n      },\r\n      props: ({ mutate }) => ({\r\n        deleteProduct: (id) => mutate({ variables: { id }})\r\n      })\r\n    }\r\n  )\r\n)(ProductsTable);\r\n","import React, { Component } from \"react\";\r\nimport { ValidatedForm } from \"../forms/ValidatedForm\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { storeProduct, updateProduct } from \"./clientMutations\";\r\n\r\nexport class ProductCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.defaultAttrs = { type: \"text\", required: true };\r\n    this.formModel = [\r\n      { label: \"Name\" }, { label: \"Description\" },\r\n      { label: \"Category\" },\r\n      { label: \"Price\", attrs: { type: \"number\"}}\r\n    ];\r\n    this.mutation = storeProduct;\r\n    if (this.props.mode === \"edit\" ) {\r\n      this.mutation = updateProduct;\r\n      this.formModel = [ { label: \"Id\", attrs: { disabled: true }},\r\n        ...this.formModel]\r\n        .map(item => ({ ...item, attrs: { ...item.attrs,\r\n          defaultValue: this.props.product[item.label.toLowerCase()]} }));\r\n    }\r\n  }\r\n\r\n  navigate = () => this.props.history.push(\"/admin/products\");\r\n\r\n  render = () => {\r\n    return <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col bg-dark text-white\">\r\n          <div className=\"navbar-brand\">SPORTS STORE</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col m-2\">\r\n          <Mutation mutation={ this.mutation }>\r\n            { (saveMutation, {client }) => {\r\n              return <ValidatedForm formModel={ this.formModel }\r\n                defaultAttrs={ this.defaultAttrs }\r\n                submitCallback={ data => {\r\n                  saveMutation({variables: { product:\r\n                    { ...data, price: Number(data.price) }}});\r\n                  if (this.props.mode !== \"edit\" ) {\r\n                    client.resetStore();\r\n                  }\r\n                  this.navigate();\r\n                }}\r\n              cancelCallback={ this.navigate }\r\n              submitText=\"Save\" cancelText=\"Cancel\" />\r\n            }}\r\n          </Mutation>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport { ProductCreator } from \"./ProductCreator\";\r\nimport { product } from \"./clientQueries\";\r\n\r\nexport class ProductEditor extends Component {\r\n\r\n  render = () =>\r\n    <Query query={ product } variables={ {id: this.props.match.params.id} } >\r\n      { ({ loading, data }) => {\r\n        if (!loading) {\r\n          return <ProductCreator {...this.props } product={data.product}\r\n            mode=\"edit\" />\r\n        }\r\n        return null;\r\n      }}\r\n    </Query>\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\nexport const authWrapper = (WrappedComponent) =>\r\n  class extends Component {\r\n    render = () =>\r\n      <AuthContext.Consumer>\r\n        { context =>\r\n          <WrappedComponent { ...this.props } { ...context } />\r\n        }\r\n      </AuthContext.Consumer>\r\n  }\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { authWrapper } from \"./AuthWrapper\";\r\nimport { ValidatedForm } from \"../forms/ValidatedForm\";\r\n\r\nexport const AuthPrompt = withRouter(authWrapper(class extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMessage: null\r\n    }\r\n    this.defaultAttrs = { required: true };\r\n    this.formModel = [\r\n      { label: \"Username\", attrs: { defaultValue: \"admin\"}},\r\n      { label: \"Password\", attrs: { type: \"password\"} },\r\n    ];\r\n  }\r\n\r\n  authenticate = (credentials) => {\r\n    this.props.authenticate(credentials)\r\n      .catch(err => this.setState({ errorMessage: err.message}))\r\n      .then(this.props.history.push(\"/admin\"));\r\n  }\r\n\r\n  render = () =>\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col bg-dark text-white\">\r\n          <div className=\"navbar-brand\">SPORTS STORE</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col m-2\">\r\n          { this.state.errorMessage != null &&\r\n            <h4 className=\"bg-danger text-center text-white m-1 p-2\">\r\n              { this.state.errorMessage }\r\n            </h4>\r\n          }\r\n          <ValidatedForm formModel={ this.formModel }\r\n            defaultAttrs={ this.defaultAttrs }\r\n            submitCallback={ this.authenticate }\r\n            submitText=\"Login\"\r\n            cancelCallback={ () => this.props.history.push(\"/\")}\r\n            cancelText=\"Cancel\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n}))\r\n","import React, { Component } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider} from \"react-apollo\";\r\nimport { GraphQlUrl } from \"../data/Urls\";\r\nimport { OrdersConnector } from \"./OrdersConnector\"\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { ToggleLink } from \"../ToggleLink\";\r\nimport { ConnectedProducts } from \"./ProductsConnector\";\r\nimport { ProductEditor } from \"./ProductEditor\";\r\nimport { ProductCreator } from \"./ProductCreator\";\r\nimport { AuthPrompt } from \"../auth/AuthPrompt\";\r\nimport { authWrapper } from \"../auth/AuthWrapper\";\r\n\r\nexport default authWrapper(class extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.client = new ApolloClient({\r\n      uri: GraphQlUrl,\r\n      request: gqloperation => gqloperation.setContext({\r\n        headers: {\r\n          Authorization: `Bearer<${this.props.webToken}>`\r\n        },\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return <ApolloProvider client={ this.client }>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col bg-info text-white\">\r\n            <div className=\"navbar-brand\">SPORTS STORE</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-3 p-2\">\r\n            <ToggleLink to=\"/admin/orders\">Orders</ToggleLink>\r\n            <ToggleLink to=\"/admin/products\">Products</ToggleLink>\r\n            { this.props.isAuthenticated &&\r\n              <button onClick={ this.props.signout }\r\n                className=\"btn btn-block btn-secondary m-2 fixed-bottom col-3\">\r\n                Log Out\r\n              </button>\r\n            }\r\n          </div>\r\n          <div className=\"col-9 p-2\">\r\n            <Switch>\r\n              {\r\n                !this.props.isAuthenticated &&\r\n                  <Route component={ AuthPrompt } />\r\n              }\r\n              <Route path=\"/admin/orders\" component={ OrdersConnector } />\r\n              <Route path=\"/admin/products/create\" component={ ProductCreator} />\r\n              <Route path=\"/admin/products/:id\" component={ ProductEditor} />\r\n              <Route path=\"/admin/products\" component={ ConnectedProducts } />\r\n              <Redirect to=\"/admin/orders\" />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ApolloProvider>\r\n  }\r\n})\r\n"],"sourceRoot":""}